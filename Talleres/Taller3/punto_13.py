# -*- coding: utf-8 -*-
"""punto_13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13hzCloTNT9-BuGsxRl7lXCGr0BYhIJv3
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy.interpolate as spi

# Base solicitada
B = 5000000

# Datos que nos brinda el enunciado 
bImp = np.array([4410000, 4830000, 5250000,5670000])
quota = np.array([1165978, 1329190, 1501474,1682830])
tipoMarginal = np.array([0.3886, 0.4102, 0.4318,0.4534])

# Interpolaciones Lineal, cuadrática y cúbica para cálculo de cuota
fun = spi.interp1d(bImp, quota , kind = 'linear')
tipoCuadratic = spi.interp1d(bImp, quota, kind='quadratic')
tipoCubic = CubicSpline(baseImp, quota)

# Interpolación para cálculo de tipo marginal
marg1 = spi.interp1d(bImp, tipoMarginal , kind = 'linear',fill_value='extrapolate')
marg2 = spi.interp1d(bImp, tipoMarginal, kind = 'quadratic',fill_value='extrapolate')
marg3 = CubicSpline(bImp, tipoMarginal)

# Datos para graficación
linear=np.array([fun(4410000), fun(4830000), fun(5250000),fun(5670000)])
cuad=np.array([tipoCuadratic(4410000), tipoCuadratic(4830000), tipoCuadratic(5250000),tipoCuadratic(5670000)])
cub=np.array([tipoCubic(4410000), tipoCubic(4830000), tipoCubic(5250000),tipoCubic(5670000)])

#marginal calculado y costo cuota final 
print("Marginal con Linear: {:.12f}".format(marg1(B)*100), '%')
print("Marginal con cuadrática: {:.12f}".format(marg2(B)*100), '%')
print("Marginal con cúbica: {:.12f}".format(marg3(B)*100), '%','\n')

print("Cuota con lineal: {:.12f}".format(fun(B)))
print("Cuota con cuadrática: {:.12f}".format(tipoCuadratic(B)))
print("Cuota con cúbica: {:.12f}".format(tipoCubic(B)))


#Graficas de los valores (Cuota de acuerdo a la base)
plt.plot(bImp,linear, 'o', color='red',linestyle='--')
plt.plot(bImp,cuad,'.',color='darkblue',linestyle='-')
plt.plot(bImp,cub,color='orange',linestyle='--')
plt.xlabel("Base imponible")
plt.ylabel("Cuota")
plt.show()